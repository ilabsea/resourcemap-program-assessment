%div{style: 'padding:15px;'}
  #div{ko(click: 'function(data, event) { $root.toggleRefineProperty("update") }'), style: 'cursor:pointer'}
    %img{ko(attr: {src: "'#{InsteddRails.url}/theme/images/icons/misc/grey/arrow' + ($root.expandedRefineProperty() == \"update\" ? 'Down' : 'Right') + '.png'"}), style: "position:relative;top:1px", width: 11, height: 11}
    %span Updated within
  /ko if: $root.expandedRefineProperty() == 'update'
  #div{style: 'padding:10px;margin-left:10px'}
    %input#refine-last-hour{ko(checked: '$root.expandedRefinePropertyValue'), type: :radio, name: 'refine-update', value: 'last_hour'}
    %label{:for => 'refine-last-hour'} the last hour
    %br/
    %input#refine-last-day{ko(checked: '$root.expandedRefinePropertyValue'), type: :radio, name: 'refine-update', value: 'last_day'}
    %label{:for => 'refine-last-day'} the last day
    %br/
    %input#refine-last-week{ko(checked: '$root.expandedRefinePropertyValue'), type: :radio, name: 'refine-update', value: 'last_week'}
    %label{:for => 'refine-last-week'} the last week
    %br/
    %input#refine-last-month{ko(checked: '$root.expandedRefinePropertyValue'), type: :radio, name: 'refine-update', value: 'last_month'}
    %label{:for => 'refine-last-month'} the last month
    %br/
    %button.white{ko(click: '$root.saveCondition', enable: '$root.validCondition')} OK
  //ko


  #div{ko(click: 'function(data, event) { $root.toggleRefineProperty("location_missing") }'), style: 'cursor:pointer;padding-top:6px'}
    %img{ko(attr: {src: "'#{InsteddRails.url}/theme/images/icons/misc/grey/arrow' + ($root.expandedRefineProperty() == \"location_missing\" ? 'Down' : 'Right') + '.png'"}), style: "position:relative;top:1px", width: 11, height: 11}
    %span Location missing
    /ko if: $root.expandedRefineProperty() == 'location_missing'
    #div{ko(click: '$root.filterByLocationMissing'), style: 'cursor:pointer;padding:10px;margin-left:10px'}
      %a.white.button{ko(click: '$root.saveCondition')} OK
    //ko

  /ko foreach: $root.layers()
  %div.coldiv{ko(css: {coldiv: '!expanded()', expdiv: 'expanded()'}), style: 'margin-top:24px;margin-bottom:14px'}
    %span{ko(text: :name, click: :toggleExpand), style: 'font-weight:bold;color:grey;cursor:pointer'}
  /ko if: expanded()
  /ko foreach: fields
  /ko if: kind != 'photo' && kind != 'calculation'&& kind != 'location'&& kind != 'identifier' && kind != 'custom_widget'

  #div{ko(click: 'function (data, event) { $root.toggleRefineProperty($data.id) }'), style: 'cursor:pointer;padding-top:6px; padding-left:30px;'}
    %img{ko(attr: {src: "'#{InsteddRails.url}/theme/images/icons/misc/grey/arrow' + ($root.expandedRefineProperty() == id ? 'Down' : 'Right') + '.png'"}), style: "position:relative;top:1px", width: 11, height: 11}
    %span{ko(text: :name)}
  //ko
  /ko if: $root.expandedRefineProperty() == id
  #div{style: 'padding:10px;margin-left:10px'}
    /ko if: kind == 'text' || kind == 'user' || kind == 'email' || kind == 'phone'
    %select{ko(value: '$root.expandedRefinePropertyOperator')}
      %option{value: '='} starts with
      %option{value: 'empty'} has no value

    /ko if: $root.expandedRefinePropertyOperator() != 'empty'
    %input{ko(value: '$root.expandedRefinePropertyValue', valueUpdate: :afterkeydown, event: {keydown: '$root.expandedRefinePropertyValueKeyPress'}, hasfocus: true)}
    //ko

    %button.white{ko(click: '$root.saveCondition', enable: '$root.validCondition')} OK
    //ko

    /ko if: kind == 'site'
    %select{ko(value: '$root.expandedRefinePropertyOperator')}
      %option{value: '='} is
      %option{value: 'empty'} has no value

    /ko if: $root.expandedRefinePropertyOperator() != 'empty'
    %input.autocomplete-site-input{ko(value: '$root.expandedRefinePropertyValue', valueUpdate: :afterkeydown, hasfocus: true), type: :text}
    //ko

    %button.white{ko(click: '$root.saveCondition', enable: '$root.validCondition')} OK
    //ko

    /ko if: kind == 'yes_no'
    %select{ko(value: '$root.expandedRefinePropertyValue')}
      %option{value: 'yes'} is 'yes'
      %option{value: 'no'} is 'no'
    %a.button.white{ko(click: '$root.saveCondition')} OK
    //ko

    /ko if: kind == 'numeric'
    %select{ko(value: '$root.expandedRefinePropertyOperator')}
      %option{value: '='} equals
      %option{value: '<'} is less than
      %option{value: '<='} is less than or equal to
      %option{value: '>'} is greater than
      %option{value: '>='} is greater than or equal to
      %option{value: 'empty'} has no value

    /ko if: $root.expandedRefinePropertyOperator() != 'empty'
    %input{ko(value: '$root.expandedRefinePropertyValue', valueUpdate: :afterkeydown, event: {keydown: :validateFormat}, hasfocus: true, attr: {id: "'numeric-input-' + code"}), type: :number}
    //ko

    %button.white{ko(click: '$root.saveCondition', enable: '$root.validCondition')} OK
    //ko

    /ko if: kind == 'date'
    %select{ko(value: '$root.expandedRefinePropertyOperator')}
      %option{value: '='} is between
      %option{value: 'empty'} has no value

    /ko if: $root.expandedRefinePropertyOperator() != 'empty'
    %input.ux-datepicker#range_from{ko(value: '$root.expandedRefinePropertyDateFrom', valueUpdate: :afterkeydown, hasfocus: true), type: :text}
    and
    %input.ux-datepicker#range_to{ko(value: '$root.expandedRefinePropertyDateTo', valueUpdate: :afterkeydown, hasfocus: true), type: :text}
    //ko

    %button.white{ko(click: '$root.saveCondition', enable: '$root.validCondition')} OK
    //ko

    /ko if: kind == 'hierarchy'
    %div{ko(template: {name: "'refine-hierarchy-items-template'", with: 'config.hierarchy'})}
    %a.button.white{ko(click: '$root.saveCondition')} OK
    //ko

    /ko if: kind == 'select_one' || kind == 'select_many'
    is:
    %select{ko(value: '$root.expandedRefinePropertyValue', options: 'config.options', optionsValue: 'function(o){return o.id }', optionsText: 'function(o){return o.label }')}
    %a.button.white{ko(click: '$root.saveCondition')} OK
    //ko
  //ko
  //ko
  //ko
  //ko
