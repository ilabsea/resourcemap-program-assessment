%hr/
%label{ko(css: {error: 'impl().optionsError'})}= t('views.layers.form.field.options')
%p.smalltext= t('views.layers.form.field.possible_values_for_this_field')
%ul.mclist.w40{style: 'width: 282px !important'}

  /ko foreach: impl().options
  %li
    %input.arrowinput{ko(visible: :editing, hasfocus: true, value: :code, valueUpdate: :afterkeydown, event: {keypress: :keyPress, blur: '$root.optionBlur'}), type: :text, style: 'position:relative;top:1px'}
    %span.arrowgrey{ko(visible: '!editing()', click: :edit, text: :code), style: 'cursor:pointer;position:relative;top:-1px'}
    %input.ux-clist{ko(value: :label, valueUpdate: :afterkeydown, event: {blur: '$root.optionBlur'}), type: :text, style: 'width: 150px !important'}
    %button.clist-remove{ko(click: '$root.removeOption'), title: t('views.layers.form.field.remove_option')}
  //ko
  %li{ko(with: '$root.newOption()')}
    %input.arrowinput{ko(value: :code, hasfocus: :hasFocus, valueUpdate: :afterkeydown, event: {keypress: '$root.newOptionKeyPress', blur: '$root.addOption'}), placeholder: "Code", style: 'position:relative;top:2px'}
    %input.ux-text{ko(value: :label, valueUpdate: :afterkeydown, event: {keypress: '$root.newOptionKeyPress', blur: '$root.addOption'}), placeholder: "Label", style: 'width: 150px !important'}
    %button.clist-add{ko(click: '$root.addOption', enable: '$root.optionValid'), title: t('views.layers.form.field.add_option')}
